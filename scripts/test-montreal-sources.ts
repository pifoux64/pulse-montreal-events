/**
 * Script de test pour les connecteurs officiels de Montr√©al
 */

import { QuartierSpectaclesConnector } from '../src/ingestors/quartier-spectacles';
import { TourismeMontrealaConnector } from '../src/ingestors/tourisme-montreal';

async function testMontrealSources() {
  console.log('üèõÔ∏è Test des connecteurs officiels de Montr√©al...\n');

  // Test Quartier des Spectacles
  console.log('üé≠ === TEST QUARTIER DES SPECTACLES ===');
  const qdsConnector = new QuartierSpectaclesConnector();
  const since = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000); // Derniers 30 jours

  try {
    console.log('\nüì° R√©cup√©ration des √©v√©nements du QDS...');
    const qdsEvents = await qdsConnector.listUpdatedSince(since, 10);
    console.log(`\n‚úÖ ${qdsEvents.length} √©v√©nements QDS r√©cup√©r√©s:\n`);
    
    qdsEvents.forEach((event, index) => {
      console.log(`${index + 1}. ${event.title}`);
      console.log(`   üìÖ Date: ${new Date(event.startDate).toLocaleDateString('fr-FR')}`);
      console.log(`   üìç Venue: ${event.venue}`);
      console.log(`   üé≠ Cat√©gorie: ${event.category}`);
      console.log(`   üÜì Gratuit: ${event.isFree ? 'Oui' : 'Non'}`);
      console.log(`   üîó URL: ${event.url}\n`);
    });

    if (qdsEvents.length > 0) {
      console.log('\nüîÑ Test de mapping vers le format unifi√©...');
      const unifiedEvent = await qdsConnector.mapToUnifiedEvent(qdsEvents[0]);
      console.log('\n‚úÖ √âv√©nement QDS unifi√©:');
      console.log(`   ID: ${unifiedEvent.sourceId}`);
      console.log(`   Source: ${unifiedEvent.source}`);
      console.log(`   Titre: ${unifiedEvent.title}`);
      console.log(`   Description: ${unifiedEvent.description.substring(0, 80)}...`);
      console.log(`   Date d√©but: ${unifiedEvent.startAt}`);
      console.log(`   Date fin: ${unifiedEvent.endAt}`);
      console.log(`   Lieu: ${unifiedEvent.venue?.name}`);
      console.log(`   Coordonn√©es: ${unifiedEvent.venue?.lat}, ${unifiedEvent.venue?.lon}`);
      console.log(`   Prix min: ${unifiedEvent.priceMin} cents`);
      console.log(`   Cat√©gorie: ${unifiedEvent.category}`);
      console.log(`   Tags: ${unifiedEvent.tags.join(', ')}`);
      console.log(`   Langue: ${unifiedEvent.language}`);
    }
  } catch (error: any) {
    console.error('‚ùå Erreur QDS:', error.message);
  }

  console.log('\n' + '='.repeat(60) + '\n');

  // Test Tourisme Montr√©al
  console.log('üèõÔ∏è === TEST TOURISME MONTR√âAL ===');
  const tourismConnector = new TourismeMontrealaConnector();

  try {
    console.log('\nüì° R√©cup√©ration des √©v√©nements de Tourisme MTL...');
    const tourismEvents = await tourismConnector.listUpdatedSince(since, 10);
    console.log(`\n‚úÖ ${tourismEvents.length} √©v√©nements Tourisme MTL r√©cup√©r√©s:\n`);
    
    tourismEvents.forEach((event, index) => {
      console.log(`${index + 1}. ${event.title}`);
      console.log(`   üìÖ Date: ${new Date(event.startDate).toLocaleDateString('fr-FR')}`);
      console.log(`   üìç Venue: ${event.venue}`);
      console.log(`   üéØ Cat√©gorie: ${event.category}`);
      console.log(`   üí∞ Prix: ${event.price || 'N/A'}`);
      console.log(`   üèòÔ∏è Quartier: ${event.neighborhood || 'N/A'}`);
      console.log(`   üîó URL: ${event.url}\n`);
    });

    if (tourismEvents.length > 0) {
      console.log('\nüîÑ Test de mapping vers le format unifi√©...');
      const unifiedEvent = await tourismConnector.mapToUnifiedEvent(tourismEvents[0]);
      console.log('\n‚úÖ √âv√©nement Tourisme MTL unifi√©:');
      console.log(`   ID: ${unifiedEvent.sourceId}`);
      console.log(`   Source: ${unifiedEvent.source}`);
      console.log(`   Titre: ${unifiedEvent.title}`);
      console.log(`   Description: ${unifiedEvent.description.substring(0, 80)}...`);
      console.log(`   Date d√©but: ${unifiedEvent.startAt}`);
      console.log(`   Date fin: ${unifiedEvent.endAt}`);
      console.log(`   Lieu: ${unifiedEvent.venue?.name}`);
      console.log(`   Coordonn√©es: ${unifiedEvent.venue?.lat}, ${unifiedEvent.venue?.lon}`);
      console.log(`   Prix min: ${unifiedEvent.priceMin} cents`);
      console.log(`   Cat√©gorie: ${unifiedEvent.category}`);
      console.log(`   Tags: ${unifiedEvent.tags.join(', ')}`);
      console.log(`   Langue: ${unifiedEvent.language}`);
    }
  } catch (error: any) {
    console.error('‚ùå Erreur Tourisme MTL:', error.message);
  }

  console.log('\nüéâ Test des connecteurs Montr√©al termin√© avec succ√®s!');
  console.log('\nüìù R√©sum√©:');
  console.log('‚úÖ Quartier des Spectacles - √âv√©nements culturels officiels');
  console.log('‚úÖ Tourisme Montr√©al - Attractions touristiques officielles');
  console.log('‚úÖ Sources l√©gitimes et respectueuses');
  console.log('‚úÖ Int√©gration compl√®te avec l\'orchestrateur');
  console.log('‚úÖ Pins Pulse color√©s par cat√©gorie');
}

testMontrealSources();
